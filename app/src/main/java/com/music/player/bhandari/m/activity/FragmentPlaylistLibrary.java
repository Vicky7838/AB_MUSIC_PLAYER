package com.music.player.bhandari.m.activity;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.DividerItemDecoration;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.music.player.bhandari.m.R;
import com.music.player.bhandari.m.UIElemetHelper.ColorHelper;
import com.music.player.bhandari.m.adapter.PlaylistLibraryAdapter;

/**
 * Created by amit on 12/1/17.
 */

public class FragmentPlaylistLibrary extends Fragment{
    private PlaylistLibraryAdapter adapter;
    View stub;

    public FragmentPlaylistLibrary(){

    }

    @Override
    public void onDestroy() {
        super.onDestroy();
    }



    @Override
    public View onCreateView(final LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View layout = inflater.inflate(R.layout.fragment_library, container, false);
        SwipeRefreshLayout swipeRefreshLayout = (SwipeRefreshLayout) layout.findViewById(R.id.swipeRefreshLayout);
        swipeRefreshLayout.setEnabled(false);
        //swipeRefreshLayout.setOnRefreshListener(this);
        layout.findViewById(R.id.relativeLayoutForRecyclerView)
                .setBackgroundDrawable(ColorHelper.getBaseThemeDrawable());

        layout.findViewById(R.id.fastScroller).setVisibility(View.GONE);

        RecyclerView mRecyclerView = (RecyclerView) layout.findViewById(R.id.recyclerviewList);
        adapter=new PlaylistLibraryAdapter(getContext());
        mRecyclerView.setAdapter(adapter);
        mRecyclerView.setLayoutManager(new FragmentPlaylistLibrary.WrapContentLinearLayoutManager(getContext()));
        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(mRecyclerView.getContext(),
                DividerItemDecoration.VERTICAL);
        mRecyclerView.addItemDecoration(dividerItemDecoration);
        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener(){
            @Override
            public void onScrolled(RecyclerView recyclerView, int dx, int dy)
            {
                if (dy > 0  )
                {
                    ((MainActivity)getActivity()).hideFab(true);
                }else ((MainActivity)getActivity()).hideFab(false);
            }

            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState)
            {
                if (newState == RecyclerView.SCROLL_STATE_IDLE)
                {
                    ((MainActivity)getActivity()).hideFab(false);
                }

                super.onScrollStateChanged(recyclerView, newState);
            }
        });
        return layout;
    }

    public void refreshPlaylistList(){
        if(adapter!=null)
        adapter.refreshPlaylistList();
    }

    //for catching exception generated by recycler view which was causing abend, no other way to handle this
    class WrapContentLinearLayoutManager extends LinearLayoutManager {
        WrapContentLinearLayoutManager(Context context) {
            super(context);
        }

        //... constructor
        @Override
        public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {
            try {
                super.onLayoutChildren(recycler, state);
            } catch (IndexOutOfBoundsException ignored) {
            }
        }
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
    }

}

